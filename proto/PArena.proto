syntax = "proto2";
option optimize_for = LITE_RUNTIME;
import "PCommon.proto";
package PArena;

//系统id: 竞技场 Arena = 182,

// local CMD_ID = 
// {
// 	cArenaOpenUI					= 1,//打开竞技场界面(返回界面信息)
//  cArenaMessage					= 2,//点击战斗记录按钮
//  cArenaRank						= 3,//点击排行按钮
//	cArenaDailyReward				= 5,//请求领取每日排名奖励(排行那边的那个)
//	cArenaExchange					= 6,//请求兑换物品 PArena.CArenaExchange
//	cArenaFight						= 7,//点击某个玩家进行挑战 PArena.CArenaFight
//	cArenaRevenge					= 8,//点击某个玩家进行复仇 PArena.CArenaFight
//	cArenaRefreshShop				= 9,//手动刷新商店 
//	cArenaFightBuy					= 10,//购买战斗次数
//  cArenaShopCall					= 11,//定时刷新商店
//	cArennFightCall					= 12,//定时刷新战斗次数 



// 	sArenaInit						= 1,//初始化信息 PArena.SArenaInfo
// 	sArenaUpdate					= 2,//竞技场信息变更 PArena.SArenaRankUpdate
// 	sArenaOpenUI					= 3,//打开竞技场界面(返回界面信息) PArena.SArenaOpenUI
//  sArenaMessage					= 4,//战斗记录返回 PArena.SArenaMessage
//  sArenaRank						= 5,//排行信息返回 PArena.SArenaRank
//	sArenaFightChanged 				= 6,//战斗的时候排名已变化 PArena.SArenaOpenUI
//	sArenaDailyReward				= 7,//请求领取每日排名奖励(排行那边的那个) PArena.SArenaReward
//	sArenaExchange					= 8,//兑换物品返回 PArena.SArenaExchange
// 	sArenaFight						= 9,//战报信息返回 PArena.SArenaFight
//	sArenaRefreshShop				= 10,//手动刷新商店返回 PArena.SArenaShop
//	sArenaFightBuy					= 11,//购买战斗次数返回 PArena.SArenaFightRefresh
//  sArenaShopCall					= 12,//定时刷新商店返回 PArena.SArenaShop
//	sArennFightCall					= 13,//定时刷新战斗次数返回 PArena.SArenaFightRefresh

// }



//////////////////////////////////
// Client -- Server
//////////////////////////////////

message CArenaExchange
{
	required int32 	id = 1;
}

message CArenaFight
{
	required int64 id = 1;		//玩家id
	optional int32 rank = 2;	//排名, 只有挑战的时候有效, 复仇不考虑 
}


//////////////////////////////////
// Server -- Client
//////////////////////////////////
message SArenaInfo
{
	required int32 rank = 1;	//我的竞技场排名
	required int32 	dailyRank  = 2;//每日结算时的排名
	required int32 	dailyState = 3;//每日排名状态 0:不可领取(未战斗) 1:未领取,2:已领取	
	required int32 	fightTimes = 4;//可战斗次数
	required int32	fightTotal = 5;//战斗最大次数
	required int32 	buyTimes = 6;//购买战斗次数
	required int64 	refreshTime = 7;//下次刷新战斗次数的时间戳(当战斗次数已满时忽略)
	required int32	score = 8;//积分
	required SArenaShop shop= 9;	//兑换商店
}

message SArenaRankUpdate
{
	required int32 rank = 1;	//我的竞技场排名	
}

message SArenaOpenUI
{
	message PPlayerInfo
	{
		required int32 id = 1;		//玩家id
		required string name = 2;	//名称
		required int32 rank = 3;	//竞技场排名
		required int32 head = 4;    //头部
		required int32 body = 5;    //身体
		required int32 sex = 6;		//性别
		required int64 force = 7;	//战力
		optional int32 title = 8;	//称号(一个)
	}
	repeated PPlayerInfo list = 1;	//界面中的玩家列表(有序的)
	required int32 rank = 2;	//我的竞技场排名
	required int32 	fightTimes = 3;//可战斗次数
	required int32	fightTotal = 4;//战斗最大次数
	required int32 	buyTimes = 5;//购买战斗次数
	required int64 	refreshTime = 6;//下次刷新战斗次数的时间戳(当战斗次数已满时忽略)
}

message SArenaMessage
{
	message PMessageInfo
	{
		required int64 id = 1;		//玩家id
		required string name = 2;	//名称
		required int32 rank = 3;	//竞技场排名
		required int32 head = 4;    //头部
		required int32 vip = 5;    	//VIP等级
		required int32 sex = 6;		//性别
		required int64 force = 7;	//战力
		required int64 time = 8;	//时间
		optional int32 downNum = 9;	//下降的名次数(可选)
		required bool attackerWin = 10;//是否攻击者胜利
		optional int32 chatBg = 11; //聊天和头像框ID
	}
	repeated PMessageInfo list = 1;	//消息列表(有序的)
}

message SArenaRank
{
	message PRankInfo
	{
		required int64 id = 1;		//玩家id
		required string name = 2;	//名称
		required int32 rank = 3;	//竞技场排名
		required int64 force = 4;	//战力
	}
	repeated PRankInfo rankList = 1;	//头部10名(有序的)自己附近的10名(有序的)	
}	

message SArenaReward
{
	repeated PIntInt rewardList = 1;//奖励
	required int32 	dailyState = 2;//每日排名状态 0:不可领取(未战斗) 1:未领取,2:已领取	
}

message SArenaExchange
{
	required int32 id = 1;
	required int32 socre = 2;
	required int32 lessTimes = 3;//剩余兑换次数
}

message SArenaFight
{
	required bool	isSuccess = 1;//是否胜利
	required int32	score = 2;//积分
	repeated PIntInt reward = 3;//奖励列表
	required SFightPVP fightInfo = 4; //战斗信息
	required int32 	dailyState = 5;//每日排名状态 0:不可领取(未战斗) 1:未领取,2:已领取	
	required SArenaOpenUI UIInfo = 6;
}

message SArenaShop
{
	repeated PIntInt shop = 1;//兑换商店
	required int32 shopTimes = 2;//商店手动刷新次数
	required int32 refreshTime	= 3;	//商店下次刷新时间
}

message SArenaFightRefresh
{
	required int32 	fightTimes = 1;//可战斗次数
	required int64 	refreshTime = 2;//下次刷新战斗次数的时间戳(当战斗次数已满时忽略)
	required int32 	buyTimes = 3;//购买战斗次数
}