syntax = "proto2";
option optimize_for = LITE_RUNTIME;
import "PCommon.proto";
package PCrossCommerce;

//系统id: 跨服商会战 CrossCommerce = 148
// local CMD_ID = 
// {
// C --> S
// 	//第一阶段
// 	cAMyBoss = 4,			//请求我的商会BOSS信息, 在这个界面的时候, 前端会每一段时间请一次//
// 	cABossList = 5,			//请求BOSS列表
// 	cAFightMyBoss = 6,		//挑战我的商会BOSS, PCrossCommerce.CAFightMyBoss没有次数的自动购买, 前端会进行次数判断请确认
// 	cAFightOtherBoss = 7,	//挑战其他商会的BOSS, PCrossCommerce.CAFightOtherBoss 没有次数的自动购买, 前端会进行次数判断请确认
// 	cAShop = 8,				//请求商城界面信息
// 	cAShopBuy = 9,			//商店购买 PCrossCommerce.CAShopBuy
// 	cARank = 10,			//请求伤害排行榜	
// 	cABuyPkTimes = 11,		//请求购买战斗次数	

// 	//第二阶段
// 	cBInfo = 21,			//请求当前的界面信息
// 	cBBuyBuff = 22,			//请求购买BUFF, 只有会长有效 PCrossCommerce.CBBuyBuff
// 	cBChangeSort = 23,		//更改玩家对战顺序 PCrossCommerce.CBChangeSort
// 	cBFightList = 24,		//请求挑战列表
// 	cBCommerceScore = 25,	//请求刷新商会积分, 在这个界面的时候, 前端每过一段时间会进行请求一次
// 	cBFight = 26,			//请求挑战 PCrossCommerce.CBFight
// 	cBLook = 27,			//请求回看(根据我方的玩家id进行查看) PCrossCommerce.CBLook
// 	cBRank = 28,			//请求积分排行
// 	cBReward = 29,			//请求领取排名奖励
//  cBRecord = 30,			//请求战斗记录

// S --> C
// 	sActivity = 1,			//刷新活动状态 PCrossCommerce.SActivity, 初始化的时候返回
// 	sStage = 2,				//刷新活动阶段 PCrossCommerce.SStage, 初始化的时候返回

// 	//第一阶段
// 	sAInfo = 3,				//我的信息 PCrossCommerce.SAInfo, 初始化的时候返回, 用来做小红点
// 	sAMyBoss = 4,			//我的商会boss信息返回 PCrossCommerce.SAMyBoss
// 	sABossList = 5,			//返回BOSS列表 PCrossCommerce.SABossList
// 	sAFightMyBoss = 6,		//挑战返回 PCrossCommerce.SAFightMyBoss
// 	sAFightOtherBoss = 7,	//挑战其他商会的BOSS PCrossCommerce.SAFightOtherBoss
// 	sAShop = 8,				//商会界面信息 PCrossCommerce.SAShop
// 	sAShopBuy = 9,			//商店购买 PCrossCommerce.SAShopBuy
// 	sARank = 10,			//伤害排名返回 PCrossCommerce.SARank

// 	//第二阶段
//	sBFightTimes = 18,		//战斗次数实时刷新 PCrossCommerce.SBFightTimes
//	sInitReward = 19,		//初始化领取状态, 在进入游戏的时候 如果可以领取则返回 PCrossCommerce.SBReward
// 	sBLadderInfo = 20,		// PCrossCommerce.SBLadderInfo, 用来做小红点提醒 1会长变化  2第二阶段开启  3进入游戏且是第二阶段
// 	sBInfo = 21,			//第二阶段的界面信息 PCrossCommerce.SBInfo
// 	sBBuyBuff = 22,			//购买buff返回 PCrossCommerce.SBBuyBuff
// 	sBChangeSort = 23,		//更改玩家对战顺序 PCrossCommerce.SBChangeSort
// 	sBFightList = 24,		//挑战列表 PCrossCommerce.SBFightList
// 	sBCommerceScore = 25,	//刷新商会积分, 前端每过一段时间会进行请求一次 PCrossCommerce.SBCommerceScore
// 	sBFight = 26,			//挑战返回 PCrossCommerce.SBFight
// 	sBLook = 27,			//回看返回 PCrossCommerce.SBLook
// 	sBRank = 28,			//积分排行返回 PCrossCommerce.SBRank
// 	sBReward = 29,			//领取奖励返回 PCrossCommerce.SBReward
// 	sBRecord = 30,			//战斗记录返回 PCrossCommerce.SBRecord
//}

//////////////////////////////////
// Client -- Server
//////////////////////////////////

////////////////////////第一阶段////////////////////////////
	//请求挑战//
	message CAFightMyBoss
	{
		required int32 bossid = 1;		//boss id
	}
	//请求挑战其他的//
	message CAFightOtherBoss
	{
		required int32 commerceId = 1;		//商会id
		required int32 serverId = 2;		//服务器id
		required int32 bossid = 3;			//boss id
	}
	//请求商店兑换
	message CAShopBuy
	{
		required int32 id = 1;
	}

////////////////////////第二阶段////////////////////////////
	//会长请求购买BUFF//
	message CBBuyBuff
	{
		required int32 playerId = 1;	//玩家id
		required int32 type = 2;		//购买类型 1百分比  2增加值  3两个都买
	}
	//调整阵容, 两个玩家对调//
	message CBChangeSort
	{
		required int32 id1 = 1;			//玩家id1
		required int32 id2 = 2;			//玩家id2
	}
	//对战//
	message CBFight
	{
		required int32 commerceId = 1;	//商会id
		required int32 serverId = 2;	//服务器id
	}
	//回看//
	message CBLook
	{
		required int32 id = 1;			//我这边的玩家id
	}

//////////////////////////////////
// Server -- Client
//////////////////////////////////

//活动状态//
message SActivity
{
	required int32 actId = 1;			//活动id
	required int32 state = 2;			//活动状态 2进行中 3已结束(领奖中) 4关闭
	optional int32 starttime = 3;		//开启时间
	optional int32 endtime = 4;			//结束时间
	optional int32 closetime = 5;		//关闭时间
}
//中午和晚上的阶段区分, 这个要实时更新//
message SStage
{
	required int32 stage = 1;			//0空闲, 1第一阶段, 2第二阶段
}

////////////////////////第一阶段////////////////////////////

	//我的信息, 用来做小红点//
	message SAInfo
	{
		required int32 fightTimes = 1;		//可以战斗的次数
		required int32 fightMax = 2;		//可以战斗次数的最大值, 每天重置
		required int32 fightBuy = 3;		//已经购买的次数
		required int32 fightBuyMax = 4;		//可购买的最大次数	
		required int32 fightBuyCost = 5;	//下次购买的钻石消耗
	}
	//我商会的BOSS信息//
	message SAMyBoss
	{
		required int32 bossId = 1;			//BOSS id
		required int64 blood = 2;			//当前血量值
	}
	//Boss列表, 按照剩余血量排序, 只发低血量的30个BOSS信息到前端//
	message SABossList
	{
		message BossInfo
		{
			required int32 bossId = 1;			//BOSS id
			required int64 blood = 2;			//当前血量值
			required int32 commerceId = 3;		//商会id
			required string commerceName = 4;	//商会名称
			required int32 commerceLevel = 5;	//商会等级
			required string ladderName = 6;		//商会会长名称
			required int32 serverId = 7;		//服务器id
		}
		repeated BossInfo list = 1;			//BOSS列表
	}

	//挑战我的商会BOSS, 要注意BOSS变化, 一个BOSS死了刷新另一个BOSS//
	message SAFightMyBoss
	{
		required SFight fight = 1;			//战报
		required SAMyBoss myBoss = 2;		//打完后的BOSS信息	
		optional SAInfo myInfo = 3;			//我的挑战信息	
	}
	//通过BOSS列表挑战其他的商会BOSS//
	message SAFightOtherBoss
	{
		required SFight fight = 1;			//战报
		optional SAInfo myInfo = 2;			//我的挑战信息
	}
	//请求商店返回//
	message SAShop
	{
		repeated PIntInt shop = 1;			//Id对应已经购买次数
		required int32 myScore = 2;			//第一个阶段获得的商城积分
		required int32 commerceGold = 3;	//第一个阶段获得的商会金币
	}
	//商店购买返回//
	message SAShopBuy
	{
		required PIntInt info = 1;			//Id对应已经购买次数
		required int32 myScore = 2;			//商城积分
	}
	//伤害列表, 只显示前100名//
	message SARank
	{
		message PlayerInfo
		{
			required int32 id = 1;			//玩家id
			required string name = 2;		//玩家名称
			required int32 commerceId = 3;	//商会id(没有商会为0)
			required int64 hurt = 4;		//伤害值
			required int32 rank = 5;		//排名
			required int32 serverId = 6;	//服务器id
		}
		repeated PlayerInfo list = 1;		//排名列表
		required int64 myHurt = 2;			//我的伤害值
		required int32 myRank = 3;			//我的排名, 0未上榜
	}

////////////////////////第二阶段////////////////////////////
	//第二界面今日可挑战次数
	message SBLadderInfo
	{
		required int32 ladderId = 2;	//商会会长id
	}
	message SBFightTimes
	{
		required int32 fightTimes = 1;	//今日可挑战次数
		required int32 fightMax = 3;	//最大值
	}
	message SPlayerInfo
	{
		message StaffInfo
		{
			required int32 id = 1;			//员工id
			required int32 color = 2;		//品阶
			optional int64 refineLevel = 3;	//专精等级
		}
		required int32 id = 1;		//玩家id
		required string name = 2;	//名称
		required int32 head = 3;    //头部
		required int32 chatBg = 4; 	//聊天和头像框ID
		required int32 vip = 5;		//VIP值
		required int32 sex = 6;		//性别
		required int64 force = 7;	//战力(原始值)
		repeated StaffInfo staffs = 8;//员工列表, 挑战列表不用返回员工列表

		optional int32 forcePer = 9;//公关战力增加的万分比
		optional int64 forceAdd = 10;//公关战力增加的值
		optional int32 titleid = 11;//称号Id
	}
	//第二阶段的界面信息
	message SBInfo
	{
		required int32 score = 1;		//商会积分
		required int32 gold = 2;		//商会金币
		repeated SPlayerInfo players = 3;//阵容上的玩家列表
	}
	//购买BUFF返回
	message SBBuyBuff
	{
		required int32 id = 1;			//玩家id
		required int32 forcePer = 2;	//公关战力增加的万分比
		required int64 forceAdd = 3;	//公关战力增加的值

		required int32 score = 4;		//商会积分
		required int32 gold = 5;		//商会金币
	}
	//调整阵容
	message SBChangeSort
	{
		repeated int32 sortList = 1;	//上阵玩家的对阵顺序(全部的)
	}
	//挑战列表
	message SBFightList
	{
		message CommerceInfo
		{
			required int32 commerceId = 1;		//商会id
			required string commerceName = 2;	//商会名称
			required int32 commerceLevel = 3;	//商会等级
			required int32 serverId = 4;		//服务器id			
			repeated SPlayerInfo players = 5;	//阵容上的玩家列表(不用发送员工列表), 只发送前两个
			required int64 allForce = 6;		//阵容总战力
			required int32 score = 7;			//商会积分
		}
		repeated CommerceInfo list = 1;	//阵容上的玩家列表
	}
	//商会积分刷新
	message SBCommerceScore
	{
		required int32 score = 1;		//商会积分
		required int32 gold = 2;		//商会金币
	}
	//挑战返回
	message SBFight
	{
		message FightTeam
		{
			required SPlayerInfo that = 1;	//对方的信息(不用发送员工列表)
			required SPlayerInfo my = 2;	//我方的信息(不用发送员工列表)
			required int32 result = 3;		//1胜利  2失败
		}
		required int32 score = 1;			//商会积分
		required int32 gold = 2;			//商会金币

		required int32 commerceId = 3;		//对方的商会id
		required string commerceName = 4;	//对方的商会名称
		required int32 serverId = 5;		//对方的服务器id
		repeated FightTeam list = 6;		//对阵列表
		required int32 result = 7;			//1胜利  2失败
		required int32 socreAdd = 8;		//积分增加了多少	
	}
	//回看
	message SBLook
	{
		required SFightPVP fight= 1; 		//战报
	}
	//排行
	message SBRank
	{
		message RankInfo
		{
			required int32 rank = 1;		//排名
			required string name = 2;		//商会名称
			required int32 score = 3;		//积分
			required int32 serverId = 4;	//服务器id
		}
		repeated RankInfo list = 1;			//排名列表
		required int32 myRank = 2;			//我的排名, 0未上榜
		required int32 score = 3;			//商会积分
	}
	//领取奖励
	message SBReward
	{
		required int32 state = 1;			//1可领取 2已领取 3未参与 4不可领取
		repeated PIntInt items = 2;			//获得的物品列表
	}
	//战斗记录
	message SBRecord
	{
		message RecordInfo
		{
			required string name = 1;		//商会名称
			required int32 score = 2;		//积分
			required int32 level = 3;		//商会等级
			required int64 force = 4;		//阵容总战力
			required int32 result = 5;		//1胜利  2失败
			required int32 socreChange = 6;	//我的积分变化值
			required int32 serverId = 7;	//服务器id
			optional int32 commerceid = 8;	//服务端存储数据使用
		}
		repeated RecordInfo list = 1;		//记录列表
	}